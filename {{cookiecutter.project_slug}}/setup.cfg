[aliases]
# https://docs.pytest.org/en/latest/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner
test=pytest
rc = egg_info --tag-date --tag-build=.rc sdist
rtm = egg_info --tag-date --tag-build=.rtm bdist
wh = egg_info sdist

[bumpversion]
current_version = {{ cookiecutter.version }}
commit = True
tag = True

[bumpversion:file:src/{{ cookiecutter.package_name }}/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[wheel]
universal = 1

[bdist_wheel]
universal = 1

[flake8]
ignore = D203
exclude =
    src/{{ cookiecutter.package_name }}/migrations,
    tests/test_data.py,
	tests/fixtures.py,
    .*/,
	*/.*
    docs/conf.py,
    build,
    dist
max-line-length = 200

[coverage:run]
branch = true
data_file = .tmp/.coverage

[coverage:paths]
source =
   src/{{cookiecutter.package_name}}
   .tox/*/lib/python*/site-packages/{{cookiecutter.package_name}}
   .tox/pypy*/site-packages/{{cookiecutter.package_name}}

[coverage:report]
omit =
    *site-packages*
    *tests*
    *.tox*
    *settings/*
show_missing = True
skip_covered = True
fail_under = 100
exclude_lines =
    noqa
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:

[coverage:html]
directory = .tmp/coverage

[coverage:xml]
output = .tmp/coverage.xml

[check-manifest]
ignore-bad-ideas = *.mo


[pytest]
python_files = tests.py test_*.py *_tests.py
addopts = -rsxX --color=yes -v --doctest-modules --doctest-glob='README.rst'
;addopts = -s --color=yes -v --doctest-modules --doctest-glob='README.rst'
;addopts = --capture=no
;addopts = -n8
testpaths = tests src README.rst
python_classes = *Tests
doctest_optionflags = ELLIPSIS

[isort]
known_localfolder = {{ cookiecutter.package_name }},test,tests,test_data
;known_first_party = {{ cookiecutter.package_name }}
known_standard_library = pathlib
;forced_separate = {{ cookiecutter.package_name }}
# This is a workaround for tox putting libraries in firstparty
default_section = THIRDPARTY
line_length = 200
not_skip = __init__.py
skip = migrations,.eggs
;skip-glob = */migrations/*
# Uncomment these is you have problems indetifying sections
;import_heading_stdlib = Standard Library
;import_heading_firstparty = My Stuff
;import_heading_thirdparty = Thirt party libraries
;import_heading_localfolder = Local
